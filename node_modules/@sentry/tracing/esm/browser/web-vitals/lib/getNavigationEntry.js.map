{"version":3,"file":"getNavigationEntry.js","sources":["../../../../../../src/browser/web-vitals/lib/getNavigationEntry.ts"],"sourcesContent":["/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAA,uCAAA,GAAA,MAAA;AACA;AACA,EAAA,MAAA,MAAA,GAAA,MAAA,CAAA,WAAA,CAAA,MAAA,CAAA;AACA;AACA,EAAA,MAAA,IAAA,GAAA,MAAA,CAAA,WAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA;AACA,EAAA,MAAA,eAAA,GAAA;AACA,IAAA,SAAA,EAAA,YAAA;AACA,IAAA,SAAA,EAAA,CAAA;AACA,IAAA,IAAA,EAAA,IAAA,IAAA,CAAA,GAAA,cAAA,GAAA,IAAA,KAAA,CAAA,GAAA,QAAA,GAAA,UAAA;AACA,GAAA,CAAA;AACA;AACA,EAAA,KAAA,MAAA,GAAA,IAAA,MAAA,EAAA;AACA,IAAA,IAAA,GAAA,KAAA,iBAAA,IAAA,GAAA,KAAA,QAAA,EAAA;AACA,MAAA,eAAA,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,GAAA,EAAA,KAAA,MAAA,CAAA,eAAA,EAAA,CAAA,CAAA,CAAA;AACA,KAAA;AACA,GAAA;AACA,EAAA,OAAA,eAAA,EAAA;AACA,CAAA,CAAA;AACA;AACA,MAAA,kBAAA,GAAA,MAAA;AACA,EAAA,IAAA,MAAA,CAAA,uBAAA,EAAA;AACA,IAAA;AACA,MAAA,MAAA,CAAA,WAAA;AACA,OAAA,CAAA,WAAA,CAAA,gBAAA,IAAA,WAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA;AACA,QAAA,uCAAA,EAAA,CAAA;AACA,MAAA;AACA,GAAA,MAAA;AACA,IAAA,OAAA,MAAA,CAAA,WAAA,IAAA,WAAA,CAAA,gBAAA,IAAA,WAAA,CAAA,gBAAA,CAAA,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,GAAA;AACA;;;;"}