import { CompanionStaticUpgradeScript } from '../module-api/upgrade.js';
import { FeedbackInstance, ActionInstance } from '../host-api/api.js';
/**
 * Run through the upgrade scripts for the given data
 * @param allActions Actions that may need upgrading
 * @param allFeedbacks Feedbacks that may need upgrading
 * @param defaultUpgradeIndex The lastUpgradeIndex of the connection, if known
 * @param upgradeScripts The scripts that may be run
 * @param config The config if it may need updating
 * @returns The upgraded data that needs persisting
 */
export declare function runThroughUpgradeScripts(allActions: {
    [id: string]: ActionInstance | undefined | null;
}, allFeedbacks: {
    [id: string]: FeedbackInstance | undefined | null;
}, defaultUpgradeIndex: number | null, upgradeScripts: CompanionStaticUpgradeScript<any>[], config: unknown | undefined): {
    updatedActions: {
        [id: string]: import("../host-api/api.js").ActionInstanceBase | undefined;
    };
    updatedFeedbacks: {
        [id: string]: (import("../host-api/api.js").FeedbackInstanceBase & {
            style?: Partial<Partial<import("../index.js").CompanionButtonStyleProps>> | undefined;
        }) | undefined;
    };
    updatedConfig: unknown;
};
//# sourceMappingURL=upgrade.d.ts.map